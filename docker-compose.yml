# Список сервисов, запускаемых каждый в своем отдельном докер контейнере
services:
  # Сервис сервера (запускает файл конфигурации в папке server/Dockerfile)
  server:
    build:
      context: ./server                   # Указываем название на рабочую директорию сервера из файла конфигурации docker
      dockerfile: Dockerfile              # Наименование файла конфигурации докера на клиенте (происходит его автоматический запуск)
    container_name: messanger_server      # Наименование контейнера сервера докера (для последующей отладки)
    ports:
      - "8080:5050"                       # Указываем соответствие между портами: 8080 (внешний порт сервера), 5050 - внутренний порт контейнера
    networks:
      - app_network                       # Указываем способ общения с другими сервисами
    env_file:
      - ./server/.env                     # Копируем .env файлы (также их можно копировать в Dockerfile, но тогда они будут зашиты в образ сборки докера)
      - ./server/.env.production          # В данном случае мы можем с легкостью менять env переменные в файлах и только перезапускать сервис (пересборки образа не будет)
    environment:
      - NODE_ENV=production               # Указываем переменную NODE_ENV (она указывается в package.json при команде npm run build + её необходимо указать для других npm пакетов)
  
  # Сервис балансировщика nginx
  nginx:
    build:
      context: ./app
      dockerfile: Dockerfile
    container_name: messanger_nginx     
    ports:
      - "5000:80"                         # Указываем соответствие между портами: 5000 (внешний порт nginx), 80 - внутренний порт контейнера - для http соединения
    networks:
      - app_network                       # Указываем способ общения с другими сервисами
    depends_on:
      - server                            # Запускаем данный сервис только после успешного запуска сервиса server

# Данное поле необходимо для установки общения между сервисами
networks:
  app_network:
    driver: bridge                        # Создает изолированную сеть